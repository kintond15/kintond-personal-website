{"ast":null,"code":"var _jsxFileName = \"/Users/kintonduong/Desktop/personal-website/my-app/src/Sections/music.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport \"./music.css\";\nimport SpotifyIcon from '../assets/spotifylogo.png';\nimport YoutubeIcon from '../assets/youtubelogo.png';\nimport TameImpala from \"../assets/tameimpala.png\";\nimport LilUziVert from \"../assets/liluzivert.png\";\nimport the1975 from \"../assets/the1975.png\";\nimport Duster from \"../assets/duster.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Music = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const musicRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      const entry = entries[0];\n      setIsVisible(entry.isIntersecting);\n    }, {\n      threshold: 0.5\n    });\n    observer.observe(musicRef.current);\n    return () => observer.disconnect();\n  }, []);\n  const tracks = [{\n    src: TameImpala,\n    alt: \"Tame Impala\",\n    action: 'https://www.youtube.com/watch?v=4Hc9MmYWnGE',\n    description: \"*FREE* Tame Impala x Rock Type Beat\"\n  }, {\n    src: LilUziVert,\n    alt: \"Lil Uzi Vert\",\n    action: 'https://www.youtube.com/watch?v=u28WqoJ2VV0',\n    description: \"*FREE* Lil Uzi Vert + Pink Tape Type Beat\"\n  }, {\n    src: the1975,\n    alt: \"The 1975\",\n    action: 'https://www.youtube.com/watch?v=3pGbcPlqzls',\n    description: \"*FREE* 1975 x Synth Pop Type Beat\"\n  }, {\n    src: Duster,\n    alt: \"Duster\",\n    action: 'https://www.youtube.com/watch?v=ghw0XxIIwwM',\n    description: \"*FREE* Duster x Alt Indie Type Beat\"\n  }];\n  const redirectToURL = url => {\n    window.open(url, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: musicRef,\n    id: \"music\",\n    className: \"music-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: isVisible ? 'visible' : '',\n      children: \"I've been producing music since I was 15. During my free time, I enjoy making beats on FL Studio, including rap, indie, R&B, and other genres. Feel free to check out any of my beats on YouTube!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `columns ${isVisible ? 'visible' : ''}`,\n      style: {\n        transitionDelay: `${index * 0.5}s`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allcontainers visible\",\n        onClick: () => redirectToURL(track.action),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: track.src,\n          alt: track.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: track.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logos\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spotifyicon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: SpotifyIcon,\n          onClick: () => redirectToURL('https://open.spotify.com/user/kintondisbawz?si=xYSjT2SXS2eBJtl2N1C29Q&nd=1&dlsi=b29bab2883ee469e'),\n          alt: \"Spotify Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"youtubeicon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: YoutubeIcon,\n          onClick: () => redirectToURL('https://youtube.com/@kintonbeats?si=GiACPRyHFDpq1wXB'),\n          alt: \"YouTube Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Music, \"+ddcvn/6KW7Ed5d6/+nSpm6ei2g=\");\n_c = Music;\nexport default Music;\nvar _c;\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SpotifyIcon","YoutubeIcon","TameImpala","LilUziVert","the1975","Duster","jsxDEV","_jsxDEV","Music","_s","isVisible","setIsVisible","musicRef","observer","IntersectionObserver","entries","entry","isIntersecting","threshold","observe","current","disconnect","tracks","src","alt","action","description","redirectToURL","url","window","open","ref","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","track","index","style","transitionDelay","onClick","_c","$RefreshReg$"],"sources":["/Users/kintonduong/Desktop/personal-website/my-app/src/Sections/music.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport \"./music.css\";\nimport SpotifyIcon from '../assets/spotifylogo.png';\nimport YoutubeIcon from '../assets/youtubelogo.png';\nimport TameImpala from \"../assets/tameimpala.png\";\nimport LilUziVert from \"../assets/liluzivert.png\";\nimport the1975 from \"../assets/the1975.png\";\nimport Duster from \"../assets/duster.png\";\n\nconst Music = () => {\n    const [isVisible, setIsVisible] = useState(false);\n    const musicRef = useRef(null);\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            entries => {\n                const entry = entries[0];\n                setIsVisible(entry.isIntersecting);\n            },\n            { threshold: 0.5 }\n        );\n\n        observer.observe(musicRef.current);\n        return () => observer.disconnect();\n    }, []);\n\n    const tracks = [\n        { src: TameImpala, alt: \"Tame Impala\", action: 'https://www.youtube.com/watch?v=4Hc9MmYWnGE', description: \"*FREE* Tame Impala x Rock Type Beat\" },\n        { src: LilUziVert, alt: \"Lil Uzi Vert\", action: 'https://www.youtube.com/watch?v=u28WqoJ2VV0', description: \"*FREE* Lil Uzi Vert + Pink Tape Type Beat\" },\n        { src: the1975, alt: \"The 1975\", action: 'https://www.youtube.com/watch?v=3pGbcPlqzls', description: \"*FREE* 1975 x Synth Pop Type Beat\" },\n        { src: Duster, alt: \"Duster\", action: 'https://www.youtube.com/watch?v=ghw0XxIIwwM', description: \"*FREE* Duster x Alt Indie Type Beat\" }\n    ];\n\n    const redirectToURL = (url) => {\n        window.open(url, '_blank');\n    };\n\n    return (\n        <div ref={musicRef} id=\"music\" className=\"music-page\">\n            <h2>Music</h2>\n            <h3 className={isVisible ? 'visible' : ''}>\n                I've been producing music since I was 15. During my free time, I enjoy making beats on FL Studio, including rap, indie, R&B, and other genres. Feel free to check out any of my beats on YouTube!\n            </h3>\n            {tracks.map((track, index) => (\n                <div key={index} className={`columns ${isVisible ? 'visible' : ''}`} style={{ transitionDelay: `${index * 0.5}s` }}>\n                    <div className=\"allcontainers visible\" onClick={() => redirectToURL(track.action)}>\n                        <img src={track.src} alt={track.alt} />\n                        <p className=\"description\">{track.description}</p>\n                    </div>\n                </div>\n            ))}\n            <div className=\"logos\">\n                <div className=\"spotifyicon\">\n                    <img src={SpotifyIcon} onClick={() => redirectToURL('https://open.spotify.com/user/kintondisbawz?si=xYSjT2SXS2eBJtl2N1C29Q&nd=1&dlsi=b29bab2883ee469e')} alt=\"Spotify Logo\" />\n                </div>\n                <div className=\"youtubeicon\">\n                    <img src={YoutubeIcon} onClick={() => redirectToURL('https://youtube.com/@kintonbeats?si=GiACPRyHFDpq1wXB')} alt=\"YouTube Logo\" />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Music;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}